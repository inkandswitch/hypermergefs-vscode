{
  "name": "hypermerge",
  "displayName": "Hypermerge",
  "description": "Browse and edit a Hypermerge document tree.",
  "version": "0.2.3",
  "publisher": "inkandswitch",
  "repository": {
    "url": "https://github.com/inkandswitch/vscode-hypermerge.git",
    "type": "git"
  },
  "engines": {
    "vscode": "^1.30.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onFileSystem:hypermerge",
    "onFileSystem:hypercore",
    "onView:hypermergeExplorer",
    "onView:hypermergeLedger",
    "onUri"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "configuration": {
      "title": "Hypermerge",
      "properties": {
        "hypermerge.sortOrder": {
          "type": "string",
          "enum": [
            "Title (Not Implemented)",
            "Key"
          ],
          "default": "Key",
          "description": "Sorting order for documents in the HypermergeFS tree."
        },
        "hypermerge.debug": {
          "type": "string",
          "default": "",
          "description": "A comma-separated glob string for enabling debug channels. See the 'debug' npm module. If you're unsure, try '*'."
        },
        "hypermerge.roots": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "uniqueItems": true,
          "default": [],
          "description": "A list of document URLs to display as roots in your document tree."
        }
      }
    },
    "commands": [
      {
        "command": "hypermerge.open",
        "category": "Hypermerge",
        "title": "Open document",
        "icon": {
          "dark": "resources/open.svg",
          "light": "resources/open.svg"
        }
      },
      {
        "command": "hypermerge.addRoot",
        "category": "Hypermerge",
        "title": "Add document as root",
        "icon": {
          "dark": "resources/open.svg",
          "light": "resources/open.svg"
        }
      },
      {
        "command": "hypermerge.removeRoot",
        "category": "Hypermerge",
        "title": "Remove document from roots"
      },
      {
        "command": "hypermerge.openRoot",
        "category": "Hypermerge",
        "title": "Open document and add as root",
        "icon": {
          "dark": "resources/open.svg",
          "light": "resources/open.svg"
        }
      },
      {
        "command": "hypermerge.createRoot",
        "category": "Hypermerge",
        "title": "Create document and add as root",
        "icon": {
          "dark": "resources/create.svg",
          "light": "resources/create.svg"
        }
      },
      {
        "command": "hypermerge.create",
        "category": "Hypermerge",
        "title": "Create document",
        "icon": {
          "dark": "resources/create.svg",
          "light": "resources/create.svg"
        }
      },
      {
        "command": "hypermerge.destroy",
        "category": "Hypermerge",
        "title": "Destroy document"
      },
      {
        "command": "hypermerge.copyUrl",
        "category": "Hypermerge",
        "title": "Copy document URL"
      },
      {
        "command": "hypermerge.forkUrl",
        "category": "Hypermerge",
        "title": "Create a fork of this document"
      },
      {
        "command": "hypermerge.followUrl",
        "category": "Hypermerge",
        "title": "Create a follower of this document"
      },
      {
        "command": "hypermerge.view",
        "category": "Hypermerge",
        "title": "View document"
      },
      {
        "command": "hypermerge.preview",
        "category": "Hypermerge",
        "title": "Preview this document"
      },
      {
        "command": "hypermerge.createKey",
        "category": "Hypermerge",
        "title": "Create new key"
      },
      {
        "command": "hypermerge.refresh",
        "category": "Hypermerge",
        "title": "Refresh documents"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "hypermerge.open"
        },
        {
          "command": "hypermerge.createKey",
          "when": "resourceScheme == hypermerge"
        },
        {
          "command": "hypermerge.addRoot",
          "when": "resourceScheme == hypermerge"
        }
      ],
      "view/title": [
        {
          "command": "hypermerge.open",
          "when": "view == hypermergeLedger",
          "group": "navigation"
        },
        {
          "command": "hypermerge.create",
          "when": "view == hypermergeLedger",
          "group": "navigation"
        },
        {
          "command": "hypermerge.openRoot",
          "when": "view == hypermergeExplorer",
          "group": "navigation"
        },
        {
          "command": "hypermerge.createRoot",
          "when": "view == hypermergeExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "hypermerge.view",
          "when": "view == hypermergeExplorer",
          "group": "navigation"
        },
        {
          "command": "hypermerge.removeRoot",
          "when": "view == hypermergeExplorer"
        },
        {
          "command": "hypermerge.copyUrl",
          "when": "view == hypermergeExplorer"
        },
        {
          "command": "hypermerge.forkUrl",
          "when": "view == hypermergeExplorer"
        },
        {
          "command": "hypermerge.followUrl",
          "when": "view == hypermergeExplorer"
        },
        {
          "command": "hypermerge.view",
          "when": "view == hypermergeLedger",
          "group": "navigation"
        },
        {
          "command": "hypermerge.destroy",
          "when": "view == hypermergeLedger"
        },
        {
          "command": "hypermerge.copyUrl",
          "when": "view == hypermergeLedger"
        },
        {
          "command": "hypermerge.forkUrl",
          "when": "view == hypermergeLedger"
        },
        {
          "command": "hypermerge.followUrl",
          "when": "view == hypermergeLedger"
        },
        {
          "command": "hypermerge.addRoot",
          "when": "view == hypermergeLedger"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "hypermergeDetails",
          "title": "Hypermerge",
          "icon": "resources/merge.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "hypermergeExplorer",
          "name": "Hypermerge Documents"
        }
      ],
      "hypermergeDetails": [
        {
          "id": "hypermergeLedger",
          "name": "Ledger Documents"
        },
        {
          "id": "hypermergeMetadata",
          "name": "Metadata"
        },
        {
          "id": "hypermergeFeeds",
          "name": "Feeds"
        },
        {
          "id": "hypermergeHistory",
          "name": "History"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "format": "prettier --write 'src/**/*.ts'"
  },
  "devDependencies": {
    "@types/node": "^10.2.0",
    "electron-rebuild": "^1.8.2",
    "prettier": "^1.16.1",
    "typescript": "^3.1.4",
    "vscode": "^1.1.26"
  },
  "dependencies": {
    "@hyperswarm/network": "0.0.4",
    "@types/pretty-bytes": "^5.1.0",
    "automerge": "^0.9.1",
    "bs58": "^4.0.1",
    "clipboardy": "^1.2.3",
    "dat-swarm-defaults": "^1.0.1",
    "discovery-cloud-client": "github:orionz/discovery-cloud-client",
    "discovery-swarm": "^5.1.2",
    "hypermerge": "github:automerge/hypermerge#fork",
    "jsonc-parser": "^2.0.2",
    "odiff": "github:inkandswitch/odiff",
    "pretty-bytes": "^5.1.0",
    "random-access-file": "^2.0.1",
    "random-access-memory": "^3.0.0",
    "utp-native": "^2.1.3",
    "ws": "^6.1.0"
  },
  "__metadata": {
    "id": "b46e5495-640d-4264-87b9-9182d116ac0b",
    "publisherDisplayName": "Ink & Switch",
    "publisherId": "1e6dd501-608b-4085-b833-2148715b1d7d"
  }
}
